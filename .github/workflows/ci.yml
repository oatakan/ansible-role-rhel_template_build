---
name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run tests weekly to catch upstream changes
    - cron: '0 8 * * 1'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible ansible-lint yamllint

      - name: Run yamllint.
        run: yamllint .

      - name: Run ansible-lint.
        run: ansible-lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Rocky Linux distributions
          - distro: rockylinux:8
            experimental: false
          - distro: rockylinux:9
            experimental: false
          - distro: rockylinux:10
            experimental: true   # Mark as experimental initially

          # AlmaLinux distributions
          - distro: almalinux:8
            experimental: false
          - distro: almalinux:9
            experimental: false
          - distro: almalinux:10
            experimental: true   # Mark as experimental initially

    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule molecule-plugins[docker] docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: molecule-results-${{ matrix.distro }}
          path: |
            molecule/default/.molecule/
            !molecule/default/.molecule/*/docker/

  # Optional: Separate job for RHEL 10 validation (can be enabled after initial testing)
  rhel10-validation:
    name: RHEL 10 Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[test-rhel10]')
    strategy:
      matrix:
        distro:
          - almalinux:10
          - rockylinux:10

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule molecule-plugins[docker] docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Validate RHEL 10 support
        run: |
          echo "Testing RHEL 10 distribution: ${{ matrix.distro }}"
          molecule create
          molecule prepare  
          molecule converge
          molecule verify
          molecule destroy
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Create success marker
        if: success()
        run: echo "RHEL 10 (${{ matrix.distro }}) validation successful" > rhel10-success.txt

      - name: Upload validation results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: rhel10-validation-${{ matrix.distro }}
          path: |
            rhel10-success.txt
            molecule/default/.molecule/
