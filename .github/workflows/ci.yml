name: CI

on:
  pull_request:
  push:
    branches: [main, master]

env:
  ANSIBLE_ROLES_PATH: ${{ github.workspace }}/tests/roles
  ANSIBLE_RETRY_FILES_ENABLED: false
  ANSIBLE_PIPELINING: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint yamllint

      - name: Install required collections
        run: |
          ansible-galaxy collection install community.general ansible.posix

      - name: Set up role locally
        run: |
          mkdir -p tests/roles
          ln -s ${{ github.workspace }} tests/roles/oatakan.rhel_template_build

      - name: Run yamllint
        run: yamllint .

      - name: Run ansible-lint
        run: ansible-lint

  syntax-check:
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up role locally
        run: |
          mkdir -p tests/roles
          ln -s ${{ github.workspace }} tests/roles/oatakan.rhel_template_build

      - name: Install required collections
        run: |
          ansible-galaxy collection install community.general ansible.posix

      - name: Syntax check
        run: |
          ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  test-docker:
    runs-on: ubuntu-latest
    needs: syntax-check
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        include:
          # Map friendly names to actual container images
          - distro_name: "rockylinux-8"
            molecule_distro: "quay.io/rockylinux/rockylinux:8"
          - distro_name: "rockylinux-9"
            molecule_distro: "quay.io/rockylinux/rockylinux:9"
          - distro_name: "almalinux-8"
            molecule_distro: "quay.io/almalinux/almalinux:8"
          - distro_name: "almalinux-9"
            molecule_distro: "quay.io/almalinux/almalinux:9"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo docker system prune -af

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'ansible-core>=2.14,<2.17' molecule molecule-plugins[docker]

      - name: Set up role locally
        run: |
          mkdir -p tests/roles
          ln -s ${{ github.workspace }} tests/roles/oatakan.rhel_template_build

      - name: Install collections
        run: |
          ansible-galaxy collection install community.general community.docker ansible.posix

      - name: Debug Docker and environment
        run: |
          echo "Testing distro: ${{ matrix.distro_name }}"
          echo "Using image: ${{ matrix.molecule_distro }}"
          docker --version
          docker info
          docker system df

      - name: Pre-pull Docker image
        run: |
          echo "Pre-pulling image to avoid timeout during molecule test..."
          docker pull ${{ matrix.molecule_distro }} || echo "Failed to pre-pull, will try during test"

      - name: Run Molecule tests
        run: |
          cd ${{ github.workspace }}
          molecule test --scenario-name default
        env:
          MOLECULE_DISTRO: ${{ matrix.molecule_distro }}
          ANSIBLE_FORCE_COLOR: '1'
          PY_COLORS: '1'

      - name: Upload molecule logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: molecule-logs-${{ matrix.distro_name }}
          path: |
            molecule/default/.molecule/
            ~/.cache/molecule/
          retention-days: 7

  # Optional VM tests for main branch only
  test-vagrant:
    runs-on: self-hosted
    needs: syntax-check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 60
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        box:
          - generic/rocky8
          - generic/rocky9
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up role locally
        run: |
          mkdir -p tests/roles
          ln -s ${{ github.workspace }} tests/roles/oatakan.rhel_template_build

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install 'ansible-core>=2.14,<2.17' molecule molecule-plugins[vagrant]

      - name: Install collections
        run: |
          ansible-galaxy collection install community.general ansible.posix

      - name: Run Molecule vagrant tests
        run: |
          cd molecule/vagrant
          molecule test
        env:
          MOLECULE_VAGRANT_BOX: ${{ matrix.box }}
