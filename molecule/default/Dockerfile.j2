FROM {{ item.image }}

# Set environment variables for better container behavior
ENV container=docker
ENV SYSTEMD_UNIT_PATH=/etc/systemd/system
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

{% if '8' in item.image %}
# Rocky Linux 8 specific setup
RUN dnf -y update && \
    dnf -y install \
    systemd \
    systemd-libs \
    systemd-udev \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    platform-python-pip \
    sudo \
    which \
    hostname \
    procps-ng \
    iproute \
    openssh-server \
    openssh-clients \
    passwd \
    initscripts \
    NetworkManager \
    glibc-common \
    && dnf clean all && \
    alternatives --set python /usr/bin/python3 && \
    alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

{% else %}
# Rocky/Alma Linux 9+ setup
RUN dnf -y update && \
    dnf -y install \
    systemd \
    systemd-libs \
    systemd-udev \
    python3 \
    python3-pip \
    sudo \
    which \
    hostname \
    procps-ng \
    iproute \
    openssh-server \
    openssh-clients \
    passwd \
    NetworkManager \
    glibc-common \
    && dnf clean all
{% endif %}

# Configure systemd for containers - remove problematic units
RUN find /etc/systemd/system \
    /lib/systemd/system \
    \( -path '*.wants/*' \
    -name '*sockets.target*' \
    -o -name '*udev*' \
    -o -name '*initctl*' \
    -o -name '*systemd-tmpfiles*' \
    -o -name '*systemd-machine-id*' \) \
    -exec rm -f {} \;

# Remove additional problematic units for containers
RUN systemctl set-default multi-user.target && \
    systemctl mask \
        dev-hugepages.mount \
        sys-fs-fuse-connections.mount \
        systemd-update-utmp.service \
        systemd-tmpfiles-setup-dev.service \
        console-getty.service \
        systemd-logind.service \
        getty.target \
        systemd-remount-fs.service

# Configure SSH for testing
RUN ssh-keygen -A && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed -i 's/#UseDNS yes/UseDNS no/' /etc/ssh/sshd_config && \
    sed -i 's/#GSSAPIAuthentication yes/GSSAPIAuthentication no/' /etc/ssh/sshd_config && \
    systemctl enable sshd

# Create required directories and set permissions
RUN mkdir -p /tmp /var/tmp /run /run/lock && \
    chmod 1777 /tmp /var/tmp && \
    chmod 755 /run && \
    chmod 1777 /run/lock

# Create systemd directories in case they don't exist
RUN mkdir -p /etc/systemd/system/multi-user.target.wants \
             /etc/systemd/system/sockets.target.wants \
             /etc/systemd/system/basic.target.wants \
             /var/lib/systemd

# Ensure proper permissions for systemd
RUN chmod 755 /etc/systemd/system

# Create a simple init script for better container startup
RUN echo '#!/bin/bash' > /usr/local/bin/container-init && \
    echo 'set -e' >> /usr/local/bin/container-init && \
    echo 'if [ "$1" = "/usr/sbin/init" ]; then' >> /usr/local/bin/container-init && \
    echo '    exec /usr/sbin/init --show-status=false --unit=multi-user.target' >> /usr/local/bin/container-init && \
    echo 'else' >> /usr/local/bin/container-init && \
    echo '    exec "$@"' >> /usr/local/bin/container-init && \
    echo 'fi' >> /usr/local/bin/container-init && \
    chmod +x /usr/local/bin/container-init

# Ensure Python is working correctly
RUN python3 -c "import sys; print(sys.version)" && \
    python3 -c "import subprocess; print('Python setup OK')"

# Add a health check to ensure the container is ready
HEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=3 \
    CMD systemctl is-system-running --quiet || systemctl is-system-running --quiet --state=degraded

# Set working directory
WORKDIR /

# Mount points for proper systemd operation
VOLUME ["/sys/fs/cgroup", "/tmp", "/run"]

# Use our custom init script
ENTRYPOINT ["/usr/local/bin/container-init"]
CMD ["/usr/sbin/init"]