---
- name: Verify
  hosts: all
  gather_facts: true
  tasks:
    - name: Check that we can connect to the instance
      ansible.builtin.ping:

    - name: Check if container detection is working
      ansible.builtin.debug:
        var: ansible_virtualization_type

    - name: Verify required packages are installed
      ansible.builtin.package_facts:

    - name: Check python3 is available
      ansible.builtin.command: python3 --version
      changed_when: false

    - name: Check hostname was reset (flexible check)
      ansible.builtin.slurp:
        src: /etc/hostname
      register: hostname_content

    - name: Show current hostname content
      ansible.builtin.debug:
        msg: "Current hostname: '{{ (hostname_content.content | b64decode).strip() }}'"

    - name: Verify hostname content (flexible check)
      ansible.builtin.assert:
        that:
          - "(hostname_content.content | b64decode).strip() in ['localhost.localdomain', 'localhost', 'instance']"
        fail_msg: "Hostname was not properly reset. Current: '{{ (hostname_content.content | b64decode).strip() }}'"
        success_msg: "Hostname check passed: '{{ (hostname_content.content | b64decode).strip() }}'"

    - name: Check SSH configuration
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^UseDNS'
        line: 'UseDNS no'
        state: present
      check_mode: true
      register: ssh_config_check

    - name: Verify SSH configuration was applied
      ansible.builtin.assert:
        that:
          - not ssh_config_check.changed
        fail_msg: "SSH configuration was not properly applied"
        success_msg: "SSH configuration is correct"

    - name: Check DNS configuration
      ansible.builtin.lineinfile:
        path: /etc/sysconfig/network
        regexp: '^RES_OPTIONS'
        line: 'RES_OPTIONS="single-request-reopen"'
        state: present
      check_mode: true
      register: dns_config_check

    - name: Verify DNS configuration was applied
      ansible.builtin.assert:
        that:
          - not dns_config_check.changed
        fail_msg: "DNS configuration was not properly applied"
        success_msg: "DNS configuration is correct"

    - name: Success message
      ansible.builtin.debug:
        msg: "âœ… All verification checks passed! Container is properly configured."
